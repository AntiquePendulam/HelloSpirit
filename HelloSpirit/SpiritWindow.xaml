<Window x:Class="HelloSpirit.SpiritWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HelloSpirit"
        xmlns:localvm="clr-namespace:HelloSpirit.ViewModels"
        mc:Ignorable="d"
        x:Name="SpiritWin"
        Title="SpiritWindow  " Height="450" Width="500" Background="{x:Static local:SpiritThemeColor.WindowBackground}" Style="{StaticResource WindowDefaultStyle}" Topmost="True">
    <Window.Resources>
        <Style x:Key="SpiritTextBoxDefaultStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#02000000"/>
            <Setter Property="Foreground" Value="{x:Static local:SpiritThemeColor.CheckListForeground}"/>
            <Setter Property="FontFamily" Value="/HelloSpirit;component/Fonts/#M+ 2c"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="SpiritTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.WindowBackground}"/>
            <Setter Property="Foreground" Value="{x:Static local:SpiritThemeColor.SpiritTextBoxForeground}"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <StackPanel Margin="3,0" Height="40">
                            <Button Padding="{TemplateBinding Padding}" Content="{TemplateBinding Text}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="Left" FontSize="{TemplateBinding FontSize}" x:Name="TxtBt" >
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border x:Name="border" Padding="{TemplateBinding Padding}" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.CloseButtonMouseOverBackground}"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="BtnTxt"/>
                                        <ei:CallMethodAction MethodName="SelectAll" TargetObject="{Binding ElementName=BtnTxt}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostKeyboardFocus" SourceName="BtnTxt">
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetName="BtnTxt"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="LostFocus" SourceName="BtnTxt">
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                        <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetName="BtnTxt"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <TextBox Padding="{TemplateBinding Padding}" x:Name="BtnTxt" Background="Black" Foreground="White" SelectionBrush="LightGray"
                                     BorderThickness="1" FontSize="{TemplateBinding FontSize}"
                                     Text="{Binding Text,RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}" Focusable="True">
                                <TextBox.Style>
                                    <Style TargetType="TextBox">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Border Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}">
                                                        <ScrollViewer x:Name="PART_ContentHost"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="Visibility" Value="Visible">
                                                <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=BtnTxt}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.CheckListBackground}"/>
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu>
                        <MenuItem Header="Delete">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem">
                                    <EventSetter Event="Click" Handler="DeleteItem"/>
                                </Style>
                            </MenuItem.Style>
                        </MenuItem>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border BorderThickness="0,1" Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.CheckListMouseOverBackground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--CheckBox and TextBox List-->
        <Style x:Key="CheckListBoxStyle" TargetType="ListBox">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type localvm:CheckListViewModel}">
                        <Border>
                            <StackPanel Orientation="Horizontal" Margin="0,2">
                                <CheckBox BorderThickness="0" IsChecked="{Binding IsFinished, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center">
                                    <CheckBox.LayoutTransform>
                                        <ScaleTransform ScaleX="2" ScaleY="2"/>
                                    </CheckBox.LayoutTransform>
                                </CheckBox>
                                <TextBox Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         FontSize="18" HorizontalAlignment="Left" Width="Auto"
                                         Style="{StaticResource SpiritTextBoxDefaultStyle}" VerticalContentAlignment="Center"
                                         MinWidth="20"/>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <ItemsPresenter VerticalAlignment="Top"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel Margin="5,5" Focusable="True" Background="{Binding Background, ElementName=SpiritWin}">
            <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SpiritTextBoxStyle}" FontSize="18" />
            <TextBox Margin="0,5" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Background="{x:Static local:SpiritThemeColor.SpiritDescriptionNormalBackground}" FontSize="15" Style="{StaticResource SpiritTextBoxStyle}"/>
            <Button x:Name="AddCheckList" Foreground="White" Height="25" Width="60" HorizontalAlignment="Right" Content="Add" Style="{StaticResource ButtonDefaultStyle}"/>
            <ListBox x:Name="ox" ItemsSource="{Binding CheckLists}" Style="{StaticResource CheckListBoxStyle}" ItemContainerStyle="{StaticResource CheckListBoxItemStyle}" />
            <Label Content="{Binding NumStr}" Foreground="White"/>
            <Button x:Name="DeleteButton" Foreground="White" FontSize="13" Height="25" Width="60" Content="Delete" HorizontalAlignment="Right">
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                        <Setter Property="Background" Value="#FF2E2E2E"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="Red"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </StackPanel>
    </Grid>
</Window>