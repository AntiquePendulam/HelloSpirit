<Window x:Class="HelloSpirit.SpiritWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HelloSpirit"
        mc:Ignorable="d"
        x:Name="SpiritWin"
        Title="SpiritWindow  " Height="450" Width="500" Background="Black" Style="{StaticResource WindowDefaultStyle}">
    <Window.Resources>
        <Style x:Key="SpiritTextBoxDefaultStyle" TargetType="TextBox">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Window}}"/>
            <Setter Property="FontFamily" Value="/HelloSpirit;component/Fonts/#M+ 2c"/>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style x:Key="SpiritTextBoxStyle" TargetType="TextBox">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border BorderThickness="2" BorderBrush="Gray" CornerRadius="4" Margin="2,0">
                            <StackPanel>
                                <Button Padding="2,0" Foreground="WhiteSmoke" HorizontalContentAlignment="Left" Content="{TemplateBinding Text}" FontSize="{TemplateBinding FontSize}" x:Name="TxtBt" Style="{StaticResource ButtonDefaultStyle}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetName="BtnTxt"/>
                                            <ei:CallMethodAction MethodName="SelectAll" TargetObject="{Binding ElementName=BtnTxt}"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostKeyboardFocus" SourceName="BtnTxt">
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetName="BtnTxt"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus" SourceName="BtnTxt">
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                                            <ei:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetName="BtnTxt"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox Padding="2,0" x:Name="BtnTxt" SelectionBrush="DarkOrange" BorderThickness="0" FontSize="{TemplateBinding FontSize}" Text="{Binding Text,RelativeSource={RelativeSource TemplatedParent},UpdateSourceTrigger=PropertyChanged}" Focusable="True">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="Visibility" Value="Visible">
                                                    <Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=BtnTxt}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Background" Value="DimGray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border BorderThickness="0,1" Background="{TemplateBinding Background}">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckListBoxStyle" TargetType="ListBox">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type local:CheckList}">
                        <Border>
                            <StackPanel Orientation="Horizontal" Margin="0,2">
                                <CheckBox IsChecked="{Binding IsFinished, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
                                <TextBox Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontSize="18" HorizontalAlignment="Left" Width="Auto" Style="{StaticResource SpiritTextBoxDefaultStyle}"/>
                            </StackPanel>
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel Focusable="True" Background="{Binding Background, ElementName=SpiritWin}">
            <TextBox Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SpiritTextBoxStyle}"/>
            <TextBox Margin="0,5" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SpiritTextBoxStyle}"/>
            <Label Content="{Binding LimitDate, StringFormat='{}{0:yyyy/MM/dd}'}" Foreground="WhiteSmoke"/>
            <ListBox ItemsSource="{Binding CheckLists}" Style="{StaticResource CheckListBoxStyle}" ItemContainerStyle="{StaticResource CheckListBoxItemStyle}"/>
            <Label Content="{Binding NumStr}" Foreground="White"/>
        </StackPanel>
    </Grid>
</Window>