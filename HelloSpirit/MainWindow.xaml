<Window x:Class="HelloSpirit.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:ct="clr-namespace:Microsoft.Toolkit.Wpf.UI.Controls;assembly=Microsoft.Toolkit.Wpf.UI.Controls.WebView"
        xmlns:local="clr-namespace:HelloSpirit"
        xmlns:localvm="clr-namespace:HelloSpirit.ViewModels"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        Name="MainWIn"
        Title="HelloSpirit - Say Hello to your Spirits." Background="{x:Static local:SpiritThemeColor.WindowBackground}" MinHeight="350" MinWidth="800" MaxWidth="1400" SizeToContent="WidthAndHeight" VerticalContentAlignment="Stretch" Style="{StaticResource WindowNonTemplateStyle}">
    <Window.Resources>
        <DataTemplate x:Key="DragAdorner">
            <Border Background="Silver" BorderBrush="Gray" BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="True">
                <StackPanel Orientation="Horizontal" Margin="4">
                    <TextBlock Text="{Binding Title}" Margin="6,0,0,0" VerticalAlignment="Center"/>
                </StackPanel>
            </Border>
        </DataTemplate>
        <Style TargetType="Border">
            <Setter Property="BorderBrush" Value="Gray"/>
        </Style>
        <Style TargetType="Label">
            <Setter Property="FontFamily" Value="/HelloTask;component/Fonts/#M+ 2c"/>
        </Style>
        
        <!--Spirit用Listのスタイル定義-->
        <Style x:Key="ListBoxDefaultStyle" TargetType="ListBox">
            <!--#region Setter-->
            <Setter Property="Margin" Value="2,2,2,4"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.ListBackground}"/>
            <Setter Property="dd:DragDrop.IsDragSource" Value="True"/>
            <Setter Property="dd:DragDrop.IsDropTarget" Value="True"/>
            <Setter Property="dd:DragDrop.DragAdornerTemplate" Value="{StaticResource DragAdorner}"/>
            <Setter Property="dd:DragDrop.DropTargetAdornerBrush" Value="Red"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="ItemsSource" Value="{Binding List}"/>
            <!--#endregion-->
            
            <!--ListBox Template-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border CornerRadius="8" BorderThickness="2" BorderBrush="WhiteSmoke" Background="{x:Static local:SpiritThemeColor.ListBackground}">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="40"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Name="ListTitle" Text="{Binding ListTitle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         FontFamily="{TemplateBinding FontFamily}" Margin="5,2" FontSize="20" Style="{StaticResource TextBoxDefaultStyle}"
                                         FontWeight="Bold" VerticalAlignment="Top" Background="{x:Static local:SpiritThemeColor.ListBackground}" Foreground="White" SelectionBrush="Gray"/>
                                    <Button Click="ListDelete" Content="X" Foreground="{x:Static local:SpiritThemeColor.ListDeleteButtonDefaultForeground}" Grid.Column="1" Margin="5">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                                <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.ListDeleteButtonDefaultBackground}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.ListDeleteButtonMouseOverBackground}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                </Grid>
                                <ItemsPresenter VerticalAlignment="Top"/>
                                <Rectangle Height="30" Fill="{x:Static local:SpiritThemeColor.ListBackground}" >
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource AncestorType=ListBox}}" Value="False">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <Button x:Name="AddButton" Click="AddButton_Click" Height="25" Content="Add" Foreground="{x:Static local:SpiritThemeColor.SpiritAddButtonForeground}" FontSize="18" VerticalAlignment="Bottom" HorizontalContentAlignment="Left" Padding="10,0">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.SpiritAddButtonBackground}"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.SpiritAddButtonMouseOverBackground}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <!--ListBox ItemTemplate-->
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type localvm:SpiritViewModel}">
                        <StackPanel VerticalAlignment="Top">
                            <Label Content="{Binding Title}" FontSize="18" FontWeight="Bold" Foreground="Black" Width="Auto" MinWidth="20" Background="#02FFA500" HorizontalAlignment="Left"/>
                            <Label Content="{Binding NumStr}" FontSize="15" Foreground="Black" Background="{x:Null}" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemDefaultStyle" TargetType="ListBoxItem">
            <!--#region Setter-->
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="5,2"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListBoxItem_PreviewMouseUp"/>
            <!--#endregion-->
            
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Color="Yellow" Offset="0"/>
                        <GradientStop Color="Orange" Offset="0.5"/>
                        <GradientStop Color="Red" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <!--ListBoxItem Template-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="SpiritItem" CornerRadius="2" Background="{TemplateBinding Background}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="WhiteSmoke"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ListBox用Listのスタイル定義-->
        <Style x:Key="ListBoxListStyle" TargetType="ListBox">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate DataType="{x:Type localvm:SpiritListViewModel}">
                        <ListBox ItemsSource="{Binding List}" DataContext="{Binding}" Style="{StaticResource ListBoxDefaultStyle}" ItemContainerStyle="{StaticResource ListBoxItemDefaultStyle}"/>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxListItemStyle" TargetType="ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="350"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border BorderThickness="1" BorderBrush="{x:Static local:SpiritThemeColor.WindowBorderColor}">
        <Grid VerticalAlignment="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <!--Content-->
                <RowDefinition Height="Auto"/>
                <!--Grass View-->
                <RowDefinition/>
                <!--Footer-->
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Title Bar-->
            <Border BorderThickness="0,0,0,1" VerticalAlignment="Top" Margin="0,1,0,0" Height="30">
                <Grid x:Name="TitleBar" Background="{x:Static local:SpiritThemeColor.WindowTitleBackground}">
                    <Grid.Resources>
                        <Style TargetType="{x:Type Label}">
                            <Setter Property="Foreground" Value="{x:Static local:SpiritThemeColor.TitleFontColor}"/>
                        </Style>
                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="120"/>
                    </Grid.ColumnDefinitions>

                    <!--Column 0 Title Text-->
                    <Label Content="{Binding Title, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}" FontSize="15" FontStyle="Italic"/>

                    <!--Column 2 Setting & Minimum & Close button-->
                    <UniformGrid Grid.Column="3" Rows="1">
                        <Button x:Name="SettingButton">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                    <Setter Property="Background" Value="{Binding Source={x:Static local:SpiritThemeColor.SettingButtonBackground}}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.SettingButtonMouseOverBackground}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Image Source="Icons/Gear.png" Width="16" Height="16"/>
                        </Button>

                        <Button x:Name="MinimumButton" Content="-">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                    <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.MinButtonBackground}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.MinButtonMouseOverBackground}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <ei:ChangePropertyAction TargetName="MainWIn" PropertyName="WindowState" Value="Minimized"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>

                        <Button x:Name="CloseButton" Content="X">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                    <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.CloseButtonBackground}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.CloseButtonMouseOverBackground}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </UniformGrid>
                </Grid>
            </Border>

            <!--Row 1 Task View-->
            <Grid Grid.Row="1" VerticalAlignment="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                
                <Label x:Name="Label" Content="{Binding Setting.UserName}" ContentStringFormat="Hello, {0}." Foreground="{x:Static local:SpiritThemeColor.HelloTextColor}" FontSize="20" FontWeight="Bold" VerticalAlignment="Top"/>
                <!--Contents-->
                <ScrollViewer Padding="0,0,0,30" Grid.Row="1" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Disabled">
                    <StackPanel Orientation="Horizontal">
                        <ListBox ItemsSource="{Binding Lists}" Style="{StaticResource ListBoxListStyle}"
                                ItemContainerStyle="{StaticResource ListBoxListItemStyle}" Background="{x:Null}"
                                BorderThickness="0" VerticalAlignment="Top" HorizontalContentAlignment="Stretch">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <UniformGrid Rows="1" VerticalAlignment="Top"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                        <Button x:Name="ListAddButton" Foreground="{x:Static local:SpiritThemeColor.ListPlusButtonForeground}" Content="+" Width="50" FontSize="30" FontWeight="Black">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource ButtonDefaultStyle}">
                                    <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.WindowBackground}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="border" CornerRadius="0,10,10,0" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                    <ContentPresenter Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="true">
                                                        <Setter Property="Background" Value="{x:Static local:SpiritThemeColor.ListPlusButtonMouseOverBackground}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <!--Row 2 GrassView-->
            <Border Grid.Row="2" Height="160" BorderThickness="0,1" VerticalAlignment="Top">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Label Content="{Binding Setting.GitHubName}" ContentStringFormat="Your contributions : {0}" FontSize="20" Foreground="{x:Static local:SpiritThemeColor.HelloTextColor}"/>
                    <ct:WebView Grid.Row="1" x:Name="GrassView"/>
                </Grid>
            </Border>

            <!--Row 3 Footer-->
            <Grid Grid.Row="3" Height="15" Background="{x:Static local:SpiritThemeColor.FootterColor}" VerticalAlignment="Bottom"/>
        </Grid>
    </Border>
</Window>